상속이란? 
	객체지향의 핵심 요소 중 하나로 부모클래스가 가지고 있는 속성과 메소드를 활용할 수 있는 개념
	상속해 준 객체의 데이터와 메소드를 그대로 이용하거나 혹은 변경해 사용할 수 있따.
	상속을 통해 개발 시간과 시행착오를 줄일 수 있다.
	부모클래스의 멤버를 상속받으나, private멤버는 직접 제어할 수 없다.
 	자식클래스의 멤버 개수는 부모클래스의 멤버보다 작을 수 없다(같거나 많다).
	자바에서는 다중상속을 할 수 없다.


상속 문법
	접근제어자 [final/abstract] class 클래스이름 extends 상위클래스(super class) {
		추가할 멤버변수선언;
		생성자;
		추가할 메소드선언;
   	 }


상속이 필요한 이유
	1. 기존에 만들어져 검증 된 프로그램을 이용하면 좋은 결과물을 빠른 시간 내에 만들 수 있다.
	2. 다양한 객체를 하나의 객체로 묶을 수 있다. 예를 들면 조류,포유류, 어류를 동물이라는 카테고리 안에 묶을 수 있는 것과 비슷하다.


Object클래스란?
	모든 클래스의 가장 꼭대기에 있는 클래스로, 부모클래스가 특별히 지정되지 않으면 저절로 Object클래스를 상속받게된다.
	모든 클래스는 Object클래스에 정의된 11개의 메소드를 상속받는다. (toString(), equals(Object obj)등...)


오버라이드(재정의)란?
	부모클래스의 메소드를 자식클래스에서 재정의 하는 것. 자식클래스가 자신에게는 없고 부모에게는 있는 메소드를 호출하면 부모클래스에서 해당 메소드를 찾게된다.
	그러나 자식클래스에서 부모클래스의 메소드를 같은 이름으로 재정의하면 부모클래스로 가지 않고 자식클래스의 메소드를 호출하게 된다.
	
	cf)생성자 오버로딩(중복정의) : 인자의 타입이 다르면 같은 이름의 메소드라도 다른 기능으로 중복정의가 가능한 것.

상속관계에서의 생성자 문제와 해결책
	디폴트 생성자는 JVM이 제공해주지만, 클래스 안에 매개변수가 있는 생성자가 하나라도 존재하게 되면 JVM 은 더 이상 디폴트 생성자를 만들어주지 않는다.
	만일 수퍼 클래스에 매개 변수가 있는 생성자를 정의하면서 매개 변수 없는 디폴트 생성자를 정의하지 않으면 수퍼 클래스에는 매개 변수 없는 생성자가 존재하지 않게 된다. 
	이러한 상태에서 서브 클래스의 생성자는 수퍼 클래스의 매개 변수 없는 디폴트 생성자를 여전히 호출하고 있기때문에 존재하지 않는 생성자를 호출하는 셈이 되어 문제가 발생하게 된다. 



super란? 
	super는 부모를 찾는 키워드이다. 두 가지 방법으로 사용한다.

	1.하위 클래스에 의해 가려진 상위클래스의 멤버변수나 메소드에 접근할 때
        		super.객체변수
       		super.메소드이름(매개변수)
	등의 방식을 통해 접근하게 된다.
	오버라이드를 통해 부모의 메소드를 재정의하면, 부모 클래스가 가지고 있던 원래의 메소드는 사용할 수 없게 된다.
	따라서 super를 통해 부모클래스의 메소드를 사용하게 된다.
	
	2.상위 클래스의 생성자를 호출할 때 이하의 방식을 통해 접근한다.
	super() ; 매개변수 없는 슈퍼클래스의 생성자 호출
	super(매개변수) ; 이 super(매개변수)문장은 반드시 첫 번째 라인에 와야 한다.
	


        


