자료구조(컬렉션)란
	다수의 데이터, 데이터그룹. 배열과 비슷한 구조를 가지고 다수의 데이터를 쉽게 처리할 수 있는 방법을 제공하는 API
	데이터의 성질에 따라 데이터를 관리(정리) 해야하는 방식이 다르기 때문에 여러가지 자료구조 형이 만들어지고 제공된다.
	자료구조 안에서는 객체의 레퍼런스만을 관리함.

List 계열 자료구조
	가장 쉽고 많이 사용됨. 배열과 비슷하나 배열의 단점을 보완한다. (처음 만들 때 크기를 고정하지 않아도 되고, 유동적임)
	▶ArrayList : 배열과 매우 비슷하다. 인덱스가 있고, 중복을 허용한다. 인덱스가 있어 검색이 용이하다 데이터의 추가와 삭제가 빈번한 경우에는 비효율적일 수 있다. 
	▶LinkedList : ArrayList와 비슷하다. 접근을 순차적으로 하기 때문에 검색 시간이 느리다. 불연속적으로 존재하는 데이터를 연결하기 때문에 데이터를 추가, 삭제하는 것이 빠르다.
	▶Vector : 배열과 유사하나 처음 크기가 고정되는 배열의 단점을 보완한 동적 배열구조 클래스. 인덱스를 통해 값에 바로 접근할 수 있다는 장점이 있다. 반면, 중간에 값을 삽입하거나 삭제해야하는 일이 잦은 경우에는 비효율적이다.


Map 계열 자료구조
	인덱스 대신 key값으로 데이터에 엑세스 한다. key는 유니크 해야한다

Set 계열 자료구조
	데이터의 순서가 없다(인덱스가 없다). 중복된 데이터를 허용하지 않는다.

Iterator(반복자) 자료구조
	데이터를 반복적으로 검색하기 위해 사용하는 인터페이스.