Servlet의 특징
	1)동적 웹어플리케이션 컴포넌트 (JSP와 같다)
	2).java확장자 (JAVA언어를 사용해 웹 프로그램을 제작한다.)
		Servlet(Interface)
			↑(구현)
		GenericServlet(abstract)
			↑(상속)
		HttpServlet
			↑(상속)
		작성한 Servlet클래스

	3)클라이언트의 요청에 동적으로 작동하고, 응답은 html에서 이루어진다.
	(java thread 채팅창처럼 송신과 수신을 동시에 이루어짐)
	4) java thread를 이용해 동작한다. 서블릿의 가장 큰 장점. 
	웹컴포넌트를 구성하는 다른 언어에 비해, 요청이 많이 들어와도 서버의 부하가 많이 걸리지 않는다
	5)MVC패턴에서 Controller 부분에 이용됨

Servlet 파일 생성 
	서블릿은 일반 클래스와 다르게 특정 클래스를 상속 받아야 서블릿 클래스가 된다.

	매핑: 웹상에서 접근해야 하는 주소로 어노테이션을 이용하거나 Web.xml을 사용한다
	어노테이션
	@WebServlet(name = "HelloWorld", description = "Ex1", urlPatterns = { "/HelloWorld" })

	Web.xml
	<servlet> 
		<servlet-name>helloworld</servlet-name>  
		<servlet-class>com.lec.ex.Ex1_HelloWorld</servlet-class>  
  	</servlet>
  		<servlet-mapping>
  		<servlet-name>helloworld</servlet-name>
  		<url-pattern>/hw</url-pattern>
	</servlet-mapping>

요청처리객체 및 응답처리객체
	
	Client요청 →  WAS → DB

	클라이언트 → WAS : 톰캣(서버)에서 request  객체를 생성한다. 요청하는 객체. 클라이언트로부터 받은 정보를 가지고 온다. 
	클라이언트 ← WAS : 톰캣(서버)에서 response 객체를 생성한다. 응답하는 객체. 요청한 것을 응답한다.

	(ex. 아이디와 패스워드를 받아 회원인지 아닌지를 확인하고 로그인이 되거나(회원) 회원가입으로 이어짐(비회원)
	