View
	행과 열로 구성된 가상 테이블.
	이미 존재하는 테이블에 제한적으로 접근하기 위해 사용 (일부 정보를 가리고 공개하는 등, 데이터에 접근 제한을 걸 때 사용)
	물리적인 저장공간이나 데이터를 가지지 않고 다른 테이블이나 뷰에서 파생된 논리적인 테이블
	기본 테이블의 데이터가 변경되면 뷰에도 반영된다

	장점:
	기본 테이블의 액세스 제한을 통한 데이터에 대한 보안 기능 제공
	기본 테이블에 영향을 주지 않을 수 있다
	여러 개의 기본 테이블로 정의된 뷰가 하나의 테이블인 것처럼 인식
	기본테이블에 대한 복잡한 형태의 질의를 뷰로 정의하여 간단하게 표현 가능

	종류: 단순뷰 / 복합뷰
		단순뷰 : 
			하나의 테이블로 구성한 뷰
			INSERT, DELETE, UPDATE와 같은 DML 명령문을 실행하여 기본 테이블의 데이터 조작 가능
			함수나 그룹 데이터는 사용 가능
		
		복합뷰:
			하나 이상의 테이블로 구성된 뷰
			DML문을 제한적으로 사용
			함수나 그룹 데이터는 사용 가능


	View의 제한 조건
		테이블에 NOT NULL로 만든 컬럼들이 뷰에 포함되어야한다.
		WITH READ ONLY옵션을 설정한 뷰는 갱신 불가
		WITH CHECK OPTION을 설정한 뷰는 뷰의 조건에 해당되는 데이터만 삽입, 삭제, 수정을 할 수 있다.

	생성 문법
		CREATE [OR REPLACE] VIEW view_name
			AS subquery
			[WITH CHECK OPTION] :INSERT나 UPDATE를 수행할 때, 서브쿼리의 조건을 만족할 경우에 처리. DELETE가능
			[WITH READ ONLY] : 읽기 전용 뷰 생성


	VIEW에서 DML 연산 수행
		단순 VIEW에서 DML 연산을 수행할 수 있다
		그러나 VIEW가 다음을 포함한다면 행을 제거하거나 수정하거나 추가할 수 없다
		그룹함수 / GROUP BY 절 / DISTINCT 키워드


Inline-view
	FROM 절 상의 서브쿼리. FROM 절에 오는 서브쿼리는 VIEW 처럼 작용한다.
	문법 : SELECT column_list
 	   FROM (Sub Query) alias
	   WHERE condition


Top-N구문
	컬럼의 값 중 N개의 가장 큰 값 또는 작은 값을 기준으로 질의하는 것

	문법 : 
	SELECT [column_list] ROWNUM(테이블에서 읽어오는 순서)
		FROM
		(SELECT [column_list] FROM table 
		ORDER BY TOP-N_column)
		WHERE ROWNUM <= N;

	사용 방법 : 데이터를 정렬하는 질의를 서브쿼리나 inline 뷰로 생성
	필수요소 : Rownum (row 순서를 나타내는 가상컬럼)
		FROM 절상의 SUB QUERY(Inline view)
		Sub Query내의 Order By 절
		사용가능한 비교연산자


