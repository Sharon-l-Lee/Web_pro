패턴(디자인 패턴)이란
	객체지향 언어의 상속, 인터페이스, 추상화 등의 기능 등 객체지향 언어의 장점들을 모아 가장 효율적으로 개발을 할 수 있게 만들어 놓은 프레임


싱글톤 패턴
	유일한 객체를 만들어 여러가지 상황에서 동일한 객체에 접근하기 위해 만들어진 패턴
	대부분의 클래스는 만들어진 클래스로부터 객체를 여러 개 생성하여 사용한다. 하지만 싱글턴 패턴을 이용하면, 클래스 하나에 객체를 하나만 생성하여 모든 곳에서 하나의 객체에만 접근할 수 있다.

Strategy Pattern
	기능 하나를 정의하고 각각을 캡슐화해 교환해서 사용할 수 있도록 만든다.
	스트래티지를 활용하면 기능(알고리즘)을 사용하는 클라이언트와는 독립적으로 기능(알고리즘)을 변경할 수 있다.
	어떤 객체를 만들 때 객체가 가지는 기능들을 추상화하여 언제든지 적용할 수 있게 만든다. 
	즉 기능을 부품화, 표준화를 말한다.


