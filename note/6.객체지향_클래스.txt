cf ) 캡슐화 :  객체가 포함한 속성과 메서드를 감추거나 권한에 따라 접근이 가능하게 처리하는 것. 
	접근 제어자 (private, public ... )에 따라 접근할 수 있다

객체와 클래스의 관계: 클래스 = 설계도, 객체 = 물건
	물건을 만들기 위해서는 설계도가 필요하듯이 객체를 만들기 위해서도 설계도가 필요한데, 이것을 클래스라고 한다.
	클래스에는 객체를 만들기 위한 필드와 메소드가 정의되어 있다.
	이 클래스를 통해 만들어진 객체를 해당 클래스의 인스턴스라고 한다.
	하나의 설계도로 여러 자동차를 만들듯 하나의 클래스로부터 여러 개의 인스턴스를 만들 수 있다.




클래스 제작 : 이하의 순서에 따른다.
	패키지 명
	클래스 명
	//필드
	데이터(인스턴스 변수 = 멤버 변수 , 필드) : 이 데이터는 생성자나 setter를 통해 초기화 하지 않으면
					객체 = null, 숫자 = 0, boolean  =false로 초기화된다
	//생성자
	생성자함수 : 클래스명과 같은 이름으로 리턴타입이 없는 메소드. 처음 클래스형 객체를 만들 때 호출됨. 
		클래스는 반드시 하나 이상의 생성자를 갖는다. 없다면 jvm이 만들어줌
	//메소드
	메소드
	getter & setter

필드: 객체의 고유한 데이터, 부품객체, 상태정보를 저장하는 곳이다. 
	선언 형태는 변수와 동일하나, 생성자와 메소드가 종료되면 사라지는 변수와는 다르게
	객체가 소멸되지 않는 한 계속 존재하는 것이 변수와의 차이점이다.

생성자 : 매개변수 있는 생성자와 매개변수 없는 생성자 등 여러 종류의 생성자를 가질 수 있다. 
	생성자가 없는 경우에는 디폴트 생성자가 컴파일러 단계에서 생성되며, 
	한 개 이상의 생성자가 있으면 디폴트 생성자는 자동 생성되지 않는다.

메소드 : 객체의 동작에 해당한다. 메소드를 호출하면 중괄호 블록 내에 있는 코드가 일괄적으로 실행된다.
	필드를 읽고 수정하거나, 다른 객체를 생성해 데이터를 전달하고, 실행 후에 어떤 값을 리턴하기도 한다.
 
